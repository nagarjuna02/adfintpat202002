{
	"name": "DF_ClearedCargo_Agg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Cargo",
						"type": "DatasetReference"
					},
					"name": "ClearedCargo"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_TradingPartner",
						"type": "DatasetReference"
					},
					"name": "TradingPartner"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_AggCargoInventory",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectClearedCargo"
				},
				{
					"name": "SelectCustomer"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tCSD_CODE as string,\n\t\tFILE_NO as string,\n\t\tLOT_NO as string,\n\t\tOCEAN_AIR as string,\n\t\tCUST_CODE as string,\n\t\tSTRIP_DATE as date,\n\t\tHOLD as string,\n\t\tDAD as string,\n\t\tRECEIVED_DATE as date,\n\t\tCONTAINER as string,\n\t\tPCS as decimal(12,3),\n\t\tPOUNDS as decimal(12,3),\n\t\tCUBE as decimal(12,3),\n\t\tPICKUP_DATE as date,\n\t\tHOUSE_REF_NO as string,\n\t\tCOMMODITY1 as string,\n\t\tSTATE as string,\n\t\tZIP_CNTY as string,\n\t\tCONSIGNEE as string,\n\t\tSTATUS as string,\n\t\tTRANSFER_YN as string,\n\t\tRELEASEFD_YN as string,\n\t\tINSERTED_TIMESTAMP as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ClearedCargo\nsource(output(\n\t\tID as integer,\n\t\tCUST_CODE as string,\n\t\tCUSTOMER_NAME as string,\n\t\tCUSTOMER_CONTACT as string,\n\t\tADDRESSS1 as string,\n\t\tADDRESSS2 as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tZIP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TradingPartner\nClearedCargo select(mapColumn(\n\t\tFILE_NO,\n\t\tLOT_NO,\n\t\tOCEAN_AIR,\n\t\tCUST_CODE,\n\t\tPCS,\n\t\tPOUNDS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectClearedCargo\nTradingPartner select(mapColumn(\n\t\tCUST_CODE,\n\t\tCUSTOMER_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCustomer\nSelectClearedCargo, SelectCustomer join(SelectClearedCargo@CUST_CODE == SelectCustomer@CUST_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 aggregate(groupBy(SelectCustomer@CUST_CODE,\n\t\tCUSTOMER_NAME,\n\t\tOCEAN_AIR),\n\tFILE_NO = countDistinct(FILE_NO),\n\t\tLOT_NO = count(LOT_NO),\n\t\tPICES = sum(PCS),\n\t\tPOUNDS = sum(POUNDS)) ~> Aggregate1\nAggregate1 sink(input(\n\t\tCUST_CODE as string,\n\t\tCUST_NAME as string,\n\t\tOCEAN_AIR as string,\n\t\tFILES as integer,\n\t\tLOTS as integer,\n\t\tPICES as integer,\n\t\tCUBES as decimal(12,3)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCUST_CODE,\n\t\tCUST_NAME = CUSTOMER_NAME,\n\t\tOCEAN_AIR,\n\t\tFILES = FILE_NO,\n\t\tLOTS = LOT_NO,\n\t\tPICES,\n\t\tCUBES = POUNDS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}